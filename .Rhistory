ggplot(aes(x=kmTag), data=PKW_UB6H) + geom_density(fill="blue")
ggplot(aes(x=kmTag), data=PKW_UB6H) + geom_density(fill="blue") +
stat_function(fun = dnorm, n = 101, size = 1.5, args = list(mean = mean(kmTag)), sd = sd(kmTag)))
ggplot(aes(x=kmTag), data=PKW_UB6H) + geom_density(fill="blue") +
stat_function(fun = dnorm, n = 101, size = 1.5, args = list(mean = mean(kmTag)), sd = sd(kmTag))
ggplot(aes(x=kmTag), data=PKW_UB6H) + geom_density(fill="blue") +
stat_function(fun = dnorm, n = 101, size = 1.5, args = list(mean = mean(PKW_UB6H$kmTag)), sd = sd(PKW_UB6H$kmTag))
ggplot(aes(x=kmTag), data=PKW_UB6H) + geom_density(fill="blue") +
stat_function(fun = dnorm, n = 101, args = list(mean = mean(PKW_UB6H$kmTag)), sd = sd(PKW_UB6H$kmTag))
stat_function(fun = norm, n = 101, args = list(mean = mean(PKW_UB6H$kmTag)), sd = sd(PKW_UB6H$kmTag))
ggplot(aes(x=kmTag), data=PKW_UB6H) + geom_density(fill="blue")
prozent_zu_note <- function(prozent) {
if (prozent >= 95) {
note <- 1.0
} else if (prozent >= 90) {
note <- 1.3
} else if (prozent >= 85) {
note <- 1.7
} else if (prozent >= 80) {
note <- 2.0
} else if (prozent >= 75) {
note <- 2.3
} else if (prozent >= 70) {
note <- 2.7
} else if (prozent >= 65) {
note <- 3.0
} else if (prozent >= 60) {
note <- 3.3
} else if (prozent >= 55) {
note <- 3.7
} else if (prozent >= 50) {
note <- 4.0
} else {
note <- 5.0
}
return(note)
}
prozent_zu_note(91.5)
prozent_zu_note(96.5)
prozent_zu_note(90.25)
prozent_zu_note(92)
prozent_zu_note(78)
prozent_zu_note(87.5)
prozent_zu_note(74.75)
prozent_zu_note(20)
prozent_zu_note(37)
prozent_zu_note(95)
prozent_zu_note(94.5)
prozent_zu_note(50)
prozent_zu_note(150)
prozent_zu_note(-150)
prozent_zu_note(90)
prozent_zu_note(71.5)
prozent_zu_note(95)
prozent_zu_note(87.5)
install.packages(c("backports", "bayestestR", "bitops", "broom", "bslib", "cachem", "cli", "colorspace", "crayon", "datawizard", "DBI", "digest", "evaluate", "farver", "fastmap", "foreign", "gbm", "giscoR", "gtsummary", "highr", "kernlab", "KernSmooth", "knitr", "magick", "MASS", "mvtnorm", "nlme", "openssl", "parameters", "partykit", "ps", "psych", "ragg", "Rcpp", "reprex", "rlang", "rmarkdown", "s2", "survival", "systemfonts", "textshaping", "tinytex", "uuid", "withr", "wk", "xfun", "XML", "yaml"))
library(readxl)
titanic5 <- read_excel("Documents/THD/Lehre/IRWS/Data Visualization/upload/titanic5.xlsx")
View(titanic5)
library(tidyverse)
library(ggbeeswarm)
library(readxl)
library(sjmisc)
library(psych)
titanic5 |> frq(Survived)
titanic5 |> filter(Sex=="female") |> frq(Survived)
titanic5 |> filter(Sex=="male") |> frq(Survived)
ggplot(data=titanic5, aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none")
titanic5 |> filter(Sex=="female") |>
ggplot(aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none")
temp <- str_sub(titanic5$Price, 2, 4)
both_names_split <- str_split(temp, pattern = fixed(" "), simplify = TRUE)
ticketprice <- both_names_split[, 1]
Preis <- as.numeric(ticketprice)
Preis <- as.data.frame(Preis)
titanic5 <- cbind(titanic5, Preis)
titanic5$lnPreis <- log(titanic5$Preis)
titanic5 |>
ggplot(aes(x=as.factor(Survived), y=Preis)) +
geom_boxplot(color="orange",
fill="orange",
alpha=0.3, notch=TRUE, notchwidth = 0.9, outlier.colour="blue",
outlier.fill="blue",
outlier.size=3) +
scale_color_brewer(palette = "Set1") +
labs(y="Price of ticket", x="Survival status", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none")
titanic5 |> filter(Class==1) |>
ggplot(aes(x=as.factor(Sex), y=Preis)) +
geom_beeswarm(cex=1, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Price of Ticket", x="Sex of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none")
titanic5 |> filter(Sex=="female") |>
ggplot(aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none")
ggplot(data=titanic5, aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none", text=element_text(size=16,  family="Comic Sans MS"))
ggplot(data=titanic5, aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none", text=element_text(size=16,  family="Rotis"))
theme(legend.position = "none", text=element_text(size=16,  family="Rotis Sans MS"))
ggplot(data=titanic5, aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none", text=element_text(size=16,  family="Karla"))
ggplot(data=titanic5, aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none", text=element_text(size=16,  family="Roboto"))
ggplot(data=titanic5, aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none", text=element_text(size=16,  family="Rotis Sans Seris Std"))
ggplot(data=titanic5, aes(x=as.factor(Class), y=Age)) +
geom_beeswarm(cex=0.8, aes(colour=as.factor(Survived)), size=2.5) +
scale_color_brewer(palette = "Set1") +
labs(y="Age", x="Class of passenger", color="")+
theme_minimal(base_size=24)+
theme(legend.position = "none", text=element_text(size=16,  family="Rotis Sans Serif Std"))
library(tidyverse)
library(ggthemes)
library(tidyverse)
library(palmerpenguins)
library(ggthemes)
penguins
ggplot(data=penguins)
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g))
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point()
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, colour=species)) +
geom_point()
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, colour=species)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth(method = "lm")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm")
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_void()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_plain()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_basic()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_blank()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_minimal()
library(tidyverse)
library(ggpubr)
library(CGPfunctions)
library(ggTimeSeries)
library(readxl)
library(ggwordcloud)
penguins <- palmerpenguins::penguins
################################################################################
# 1. Vertical Bar Chart
################################################################################
# Penguin counts per island
penguins |>
ggplot(aes(x=island, fill=island)) +
geom_bar() +
geom_text(aes(label = after_stat(count)), stat = "count", vjust = -0.5) +
scale_fill_brewer(palette = "Blues") +
labs(title="Frequency of penguins per island") +
xlab("") +
ylab("") +
theme_minimal(base_size = 16) +
theme(legend.position="none", axis.text.y=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(), text=element_text(family="Karla"))
penguins |>
ggplot(aes(x=island, fill=island)) +
geom_bar() +
geom_text(aes(label = after_stat(count)), stat = "count", vjust = -0.5) +
scale_fill_brewer(palette = "Blues") +
labs(title="Frequency of penguins per island") +
xlab("") +
ylab("") +
theme_minimal(base_size = 14) +
theme(legend.position="none", axis.text.y=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(), text=element_text(family="Karla"))
library(tidyverse)
library(palmerpenguins)
library(ggthemes)
View(penguins)
ggplot(data=penguins)
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g))
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point()
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, colour=species)) +
geom_point()
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, colour=species)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point(aes(color = species)) +
geom_smooth(method = "lm")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) +
geom_point(aes(color = species, shape = island)) +
geom_smooth(method = "lm")
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_minimal()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
theme_economist()
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_minimal()
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_minimal(base_size = 16)+
theme(plot.title = element_text(hjust = -0.16), plot.subtitle = element_text(hjust = -0.23),
panel.grid.major = element_line(color = "grey", linewidth = 0.5, linetype = 3),
panel.grid.minor = element_line(color = "grey", linewidth = 0.5, linetype = 3))
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_minimal(base_size = 16)+
theme(plot.title = element_text(hjust = -0.16), plot.subtitle = element_text(hjust = -0.23),
panel.grid.major = element_line(color = "grey", linewidth = 0.5, linetype = 3),
panel.grid.minor = element_line(color = "grey", linewidth = 0.5, linetype = 3))
ggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species") +
scale_color_colorblind() +
theme_minimal(base_size = 16)+
theme(panel.grid.major = element_line(color = "grey", linewidth = 0.5, linetype = 3),
panel.grid.minor = element_line(color = "grey", linewidth = 0.5, linetype = 3))
library(tidyverse)
library(ggpubr)
library(CGPfunctions)
library(ggTimeSeries)
library(readxl)
library(ggwordcloud)
penguins <- palmerpenguins::penguins
################################################################################
# 1. Vertical Bar Chart
################################################################################
# Penguin counts per island
penguins |>
ggplot(aes(x=island, fill=island)) +
geom_bar() +
geom_text(aes(label = after_stat(count)), stat = "count", vjust = -0.5) +
scale_fill_brewer(palette = "Blues") +
labs(title="Frequency of penguins per island") +
xlab("") +
ylab("") +
theme_minimal(base_size = 14) +
theme(legend.position="none", axis.text.y=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank(), text=element_text(family="Karla"))
# Share of penguins per island (see solution only using ggplot in
# barchart_highlight.R on moodle)
penguins_tf <- penguins %>%
group_by(island) %>%
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
View(penguins_tf)
penguins_tf %>%
ggplot(aes(x=island, y=perc, fill=island)) +
geom_col() +
geom_text(aes(label = labels), vjust = 1.5) +
scale_fill_brewer(palette = "Blues") +
labs(title="Share of penguins per island") +
xlab("") +
ylab("") +
theme_minimal(base_size = 16) +
theme(legend.position="none", axis.text.y=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
################################################################################
# 3. Horizontal Bar Chart
################################################################################
penguins_tf %>%
ggplot(aes(x=island, y=perc, fill=island)) +
geom_col() +
geom_text(aes(label = round(perc, digits=2), hjust = 1.5)) +
coord_flip() +
scale_fill_brewer(palette = "Blues") +
labs(title="Share of penguins per island") +
xlab("") +
ylab("") +
theme_minimal(base_size = 16) +
theme(legend.position="none", axis.text.x=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
################################################################################
# 4. Stacked Bar-Chart
################################################################################
penguins_tf %>%
ggplot(aes(x=factor(1), y=perc, fill=island)) +
geom_col(position="fill") +
coord_flip() +
geom_text(aes(label = island), position = position_fill(), hjust=1.25) +
scale_fill_brewer(palette = "Blues") +
labs(title="Share of penguins per island") +
xlab("") +
ylab("") +
theme_minimal() +
theme(legend.position="none", axis.text.y=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
################################################################################
# 5. Line Chart
################################################################################
penguins %>%
group_by(year) %>%
count() %>%
ungroup() %>%
ggplot(aes(x=year, y=n)) +
geom_hline(yintercept = 114, color="red", linetype=2) +
annotate("text", label = "This is 114", x = 2007.02, y = 114.5, size = 4, colour = "red")+
geom_line(colour="#00305e", lwd=1) +
geom_point(colour="#00305e", shape=21, size = 2, fill="white", stroke=1) +
xlab("Years") +
ylab("") +
scale_x_continuous(limits=c(2007, 2009), breaks=seq(2007, 2009, 1)) +
labs(title="Number of observed penguins per year", subtitle="Results based on the penguins data from palmerpenguins") +
theme_minimal(base_size = 16) +
theme(plot.title = element_text(hjust = -0.16), plot.subtitle = element_text(hjust = -0.23),
panel.grid.major = element_line(color = "grey", linewidth = 0.5, linetype = 3),
panel.grid.minor = element_line(color = "grey", linewidth = 0.5, linetype = 3))
################################################################################
# 6. Small Multiple Pie Charts
################################################################################
### Single Pie Chart
penguins_tf %>%
ggplot(aes(x = "", y = perc, fill = island)) +
geom_col() +
coord_polar(theta = "y") +
theme_void()
### Small multiples
g1 <- penguins_tf %>%
mutate(island = fct_relevel(island, "Biscoe", "Dream", "Torgersen")) %>%
ggplot(aes(x = "", y = perc, fill = island)) +
geom_col(color = "white", size = 0.5) +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5), color="white") +
coord_polar(theta = "y") +
scale_fill_manual(values=c("Torgersen" = "#00305e", "Dream" = "#818bac", "Biscoe" = "#818bac")) +
labs(title="Torgersen", fill = "") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
g2 <- penguins_tf %>%
mutate(island = fct_relevel(island, "Biscoe", "Dream", "Torgersen")) %>%
ggplot(aes(x = "", y = perc, fill = island)) +
geom_col(color = "white", size = 0.5) +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5), color="white") +
coord_polar(theta = "y") +
scale_fill_manual(values=c("Torgersen" = "#818bac", "Dream" = "#00305e", "Biscoe" = "#818bac")) +
labs(title="Dream", fill = "") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
g3 <- penguins_tf %>%
mutate(island = fct_relevel(island, "Biscoe", "Dream", "Torgersen")) %>%
ggplot(aes(x = "", y = perc, fill = island)) +
geom_col(color = "white", size = 0.5) +
geom_text(aes(label = labels), position = position_stack(vjust = 0.5), color="white") +
coord_polar(theta = "y") +
scale_fill_manual(values=c("Torgersen" = "#818bac", "Dream" = "#818bac", "Biscoe" = "#00305e")) +
labs(title="Biscoe", fill = "") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5))
ggarrange(g1, g2, g3, ncol = 3, nrow = 1, legend="none")
################################################################################
# 9. Lollipop Chart
################################################################################
penguins_tf %>%
ggplot(aes(x=island, y=perc)) +
geom_segment(aes(x=island, xend=island, y=0, yend=perc), color="grey")+
geom_point(color="#52822f", size=4) +
labs(title="Share of penguins per island") +
xlab("") +
ylab("") +
theme_minimal(base_size=16) +
theme(legend.position="none", axis.text.y=element_blank(), panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
setwd("~/Documents/THD/Lehre/InnStat/GrundlagenR/Skript/0a_Vortreffen_Erlangen")
setwd("~/Documents/THD/Lehre/InnStat/GrundlagenR/Skript/GDSR_0a_Vortreffen")
<br>
